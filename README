I. Installation from source
II. Usage
III. Getting help
IV. Required packages
V. Output files
VI. Known Bugs
VII. Building a lobSTR index
VIII. Allelotyping a bam file not created using lobSTR


I. INSTALLATION FROM SOURCE
 
To install from source, download lobstr (which you must have gotten that far if you're reading this README file...). Navigate to the directory where it was installed. Then do:

tar -xzvf lobstr-xxx.tar.gz
cd lobstr-xxx/
./configure
make
make install

The last step might require root access in order to have proper permissions. Congratulations, if these steps didn't explode with error messages, you're done. If not, it is probably because you're missing required packages. See section IV for requirements.

Note, it is required that R be installed for installation to complete successfully. You will also need to install Rcpp and RInside for configuration to work. You can install them easily from inside of the R environment using the following commands:

>install.packages("Rcpp")
>install.packages("RInside")

Note on some systems this may require you to do "sudo apt-get install r-cran-rcpp"

II. USAGE

Part I: creating an STR alignment

To see usage instructions, just type:

lobSTR --help

for a list of all command line options.

Required inputs are:
* -f: comma separated list of files containing raw reads in fasta, fastq, or bam format (for fastq you must add the argument -q, for bam you must add the argument --bam)
* -o: prefix to name all output files
* --index-prefix: path and prefix of lobSTR index: You can download the lobSTR index from the lobSTR downloads page. Unzip the index to an folder PATH-TO-INDEX. To specify this as the index, use:
--index-prefix PATH-TO-INDEX/lobSTR_

change the path accordingly to match the path where the index is stored. An index for hg18 and hg19 is available for download on the lobSTR website

Part II: allelotyping

To see usage instructions, type:
allelotype --help

for a list of all command line options.

Required inputs are:
* command:
  - "train" builds a stutter noise model using given alignment data. This only works on male samples with a sizable number of reads aligned to the sex chromosomes.
  - "classify" takes in a pre made noise model and produces an allelotype file
  - "both" performs both training and classification
  - "simple" performs allelotyping without using a noise model
* --bam: a bam file consisting of aligned reads. If the bam file was not produced by lobSTR, you must run converBam.py first (see below)
* --out: a prefix to name output files
* --noise_model: an example noisemodel is given in $PATH_TO_LOBSTR/models/illumina.noisemodel.txt. Or you can create your own using the "train" command described above. 

Optional:
* --no-rmdup: do not remove PCR duplicates


III. GETTING HELP
For more information see the website at http://jura.wi.mit.edu/erlich/lobSTR/

IV. REQUIREMENTS

Assuming you're using a UNIX environment, the following packages are required, and can be obtained by doing "sudo apt-get install $package_name".

gcc
g++
automake
libtool
pkg-config
fftw3-dev
libboost-dev
r-base
r-cran-rcpp

Python libraries (required only for indexing or converting previously aligned BAM files to lobSTR format):
pysam
Biopython

V. OUTPUT

The following files are output from lobSTR:

$prefix.aligned.tab: all aligned reads
$prefix.aligned.bam: aligned reads in bam format
$prefix.genotypes.tab: genotype called at each locus


VI. KNOWN BUGS
covertBam.py will not produce accurate allelotypes for reads with indels in the flanking regions. At this point it is highly recommended that if you want to use a previously aligned BAM file for allelotyping, that you first run lobSTR alignment on the BAM file and then proceed with the regular instructions. Better support for converting foreign BAM files to contain lobSTR_specific tags is coming soon.

VII. Building a lobSTR index
An index built using the Tandem Repeat Finder table from UCSC is included in the index_trf/ directory of the lobSTR download.

You can build your own lobSTR index using the lobstr_index.py script provided in the scripts/ directory of the lobSTR download. 

Usage:

python PATH-TO-LOBSTR/scripts/lobstr_index.py --str <path to trf table> --ref <reference genome in fasta format> --out_dir <path to output index> 

Where --str is the table resulting from running the Tandem Repeat Finder tool.
The resulting argument to --index-prefix for lobSTR will then be $out_dir/lobSTR_


VIII. Allelotyping bam alignment files not created using lobSTR.
Because lobSTR adds its own custom fields to bam files, you must first convert the bam file you want to profile to the lobSTR bam format.

First you must ensure that the bam file is sorted and indexed:
samtools sort test.bam test.sorted
samtools index test.sorted.bam

Then run convertBam.py, available in $PATH_TO_LOBSTR/scripts/convertBam.py:
python convertBam.py trf.ucsc.hg18.filtered.bed test.sorted.bam test.sorted.converted.bam

trf.ucsc.hg18.filtered.bed and trf.ucsc.hg18.filtered.bed are available from the lobSTR website.

To create the lobSTR-formatted bam file test.sorted.converted.bam. This file is now ready to be allelotyped by lobSTR_allelotype.py 

Note, this step is sometimes unreliable. See "KNOWN BUGS" for more information.