strangers README file

I. Installation
II. Usage
III. Getting help
IV. Required packages
V. Output files
VI. Known Bugs
VII. Building a lobSTR index
VIII. Allelotyping a bam file not created using lobSTR


I. INSTALLATION
 
To install, download lobstr (which you must have gotten that far if you're reading this README file...). Navigate to the directory where it was installed. Then do:

tar -xzvf lobstr-xxx.tar.gz
cd lobstr-xxx/
./configure
make
make install

The last step might require root access in order to have proper permissions. Congratulations, if these steps didn't explode with error messages, you're done. If not, it is probably because you're missing required packages. See section IV for requirements.

II. USAGE

Part I: creating an STR alignment

To see usage instructions, just type:

lobSTR --help

for a list of all command line options.

Required inputs are:
* -f: comma separated list of files containing raw reads in fasta or fastq format (for fastq you must add the argument -q)
* -o: prefix to name all output files
* --index: path and prefix of lobSTR index: You can download the lobSTR index form the lobSTR downloads page. Unzip the index to an folder PATH-TO-INDEX. To specify this as the index, use:
--index-prefix PATH-TO-INDEX/lobSTR_

change the path accordingly to match the path where the index is stored. An index for hg18 is available in the index_trf/ directory of the lobSTR download.

Part II: allelotyping

To see usage instructions, type:
pyton $PATH_TO_LOBSTR/scripts/lobSTR_allelotype.py --help

for a list of all command line options.

Required inputs are:
* command:
  - "train" builds a stutter noise model using given alignment data. This only works on male samples with a sizable number of reads aligned to the sex chromosomes.
  - "classify" takes in a pre made noise model and produces an allelotype file
  - "both" performs both training and classification
* --bam: a bam file consisting of aligned reads. The bam file MUST be sorted and indexed before calling this script. If the bam file was not produced by lobSTR, you must run converBam.py first (see below)
* --out: a prefix to name output files

Optional:
* --rmdup: remove PCR duplicates


III. GETTING HELP
For more information see the website at http://jura.wi.mit.edu/erlich/lobSTR/

IV. REQUIREMENTS

Assuming you're using a UNIX environment, the following packages are required, and can be obtained by doing "sudo apt-get install $package_name".

gcc
g++
automake
libtool
pkg-config
fftw3-dev
libboost-dev
bamtools

Python libraries:
pysam
Biopython
numpy

V. OUTPUT

The following files are output from lobSTR:

$prefix.aligned.tab: all aligned reads
$prefix.aligned.bam: aligned reads in bam format
$prefix.genotypes.tab: genotype called at each locus


VI. KNOWN BUGS
Cigar scores in the bam format do not take into account indels in the flanking regions, so bam alignments for those reads will be incorrect. This does not affect the genotyping result.

The alignment score is not currently reported in the aligned.tab file

VII. Building a lobSTR index
An index built using the Tandem Repeat Finder table from UCSC is included in the index_trf/ directory of the lobSTR download.

You can build your own lobSTR index using the lobstr_index.py script provided in the scripts/ directory of the lobSTR download. 
Usage:
python PATH-TO-LOBSTR/scripts/lobstr_index.py --str <path to trf table> --ref <reference genome in fasta format> --out_dir <path to output index> 

Where --str is the table resulting from running the Tandem Repeat Finder tool.
The resulting argument to --index-prefix for lobSTR will then be $out_dir/lobSTR_


VIII. Allelotyping bam alignment files not created using lobSTR.
Because lobSTR adds its own custom fields to bam files, you must first convert the bam file you want to profile to the lobSTR bam format.

First you must ensure that the bam file is sorted and indexed:
samtools sort test.bam test.sorted
samtools index test.sorted.bam

Then run convertBam.py, available in $PATH_TO_LOBSTR/scripts/convertBam.py:
python convertBam.py $PATH_LOBSTR/data/trf.ucsc.hg18.filtered.bed test.sorted.bam test.sorted.converted.bam

To create the lobSTR-formatted bam file test.sorted.converted.bam. This file is now ready to be allelotyped by lobSTR_allelotype.py 